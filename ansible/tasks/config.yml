- name: Check if config.yaml exists
  stat:
    path: "{{ playbook_dir }}/../config.yaml"
  register: config_file

- name: Load existing config
  include_vars: "{{ playbook_dir }}/../config.yaml"
  when: config_file.stat.exists

- name: Get current gateway for default
  shell: ip route | grep default | awk '{print $3}' | head -1
  register: current_gateway
  when: gateway_ip is not defined

- name: Prompt for static IP if not in config
  pause:
    prompt: "Enter the static IP address you want for this host [192.168.31.153]"
    echo: yes
  register: static_ip_input
  when: static_ip is not defined

- name: Prompt for username if not in config
  pause:
    prompt: "Enter your username for disk ownership [{{ lookup('env', 'USER') }}]"
    echo: yes
  register: username_input
  when: username is not defined

- name: Prompt for gateway IP if not in config
  pause:
    prompt: "Enter the gateway IP address [{{ current_gateway.stdout if current_gateway.stdout else '192.168.31.1' }}]"
    echo: yes
  register: gateway_ip_input
  when: gateway_ip is not defined

- name: Prompt for domain if not in config
  pause:
    prompt: "Enter your domain [home.shubapp.com]"
    echo: yes
  register: domain_input
  when: domain is not defined

- name: Set variables from prompts with defaults
  set_fact:
    static_ip: "{{ static_ip_input.user_input if static_ip_input.user_input != '' else '192.168.31.153' }}"
    username: "{{ username_input.user_input if username_input.user_input != '' else lookup('env', 'USER') }}"
    gateway_ip: "{{ gateway_ip_input.user_input if gateway_ip_input.user_input != '' else (current_gateway.stdout if current_gateway.stdout else '192.168.31.1') }}"
    domain: "{{ domain_input.user_input if domain_input.user_input != '' else 'home.shubapp.com' }}"
  when: not config_file.stat.exists

- name: Install bun prerequisites
  apt:
    name: unzip
    state: present
    update_cache: yes

- name: Install bun
  shell: curl -fsSL https://bun.sh/install | bash
  args:
    creates: /home/{{ username }}/.bun/bin/bun
  become_user: "{{ username }}"
  become: no

- name: Load services list
  include_vars: "../../services/services.yaml"
  when: not config_file.stat.exists

- name: Initialize selected services list
  set_fact:
    selected_services: []
  when: not config_file.stat.exists

- name: Prompt for each service
  pause:
    prompt: "Include {{ item.label }} service? [Y/n]"
    echo: yes
  register: service_choice
  loop: "{{ services }}"
  when: not config_file.stat.exists

- name: Build selected services list
  set_fact:
    selected_services: "{{ selected_services + [item.item | combine({'url': item.item.url | default('') | replace('{{ domain }}', domain)}) if item.item.url is defined else item.item] }}"
  loop: "{{ service_choice.results }}"
  when: 
    - not config_file.stat.exists
    - item.user_input | default('y') | lower in ['y', 'yes', '']

- name: Create config.yaml
  copy:
    content: |
      static_ip: "{{ static_ip }}"
      username: "{{ username }}"
      gateway_ip: "{{ gateway_ip }}"
      domain: "{{ domain }}"
      services:
      {{ selected_services | to_nice_yaml(indent=2) | indent(2, true) }}
    dest: "{{ playbook_dir }}/../config.yaml"
  when: not config_file.stat.exists

- name: Generate Caddyfile from config
  shell: cd {{ playbook_dir }}/bun-script && /home/{{ username }}/.bun/bin/bun run generate-caddyfile.ts
  become_user: "{{ username }}"
  become: no
