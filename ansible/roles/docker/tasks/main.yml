- name: Install prerequisite packages
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
      - gnupg
      - yq
    state: present
    update_cache: yes

- name: Add Docker's official GPG key
  get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /etc/apt/keyrings/docker.asc
    mode: "0644"

- name: Add Docker repository
  apt_repository:
    repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    state: present

- name: Install Docker engine and compose plugin
  apt:
    name:
      - docker-ce
      - docker-compose-plugin
    state: present
    update_cache: yes

- name: Add user to docker group
  user:
    name: "{{ username }}"
    groups: docker
    append: yes

- name: Read config.yaml
  slurp:
    src: "{{ playbook_dir }}/../config.yaml"
  register: config_content

- name: Parse config.yaml
  set_fact:
    casa_config: "{{ config_content.content | b64decode | from_yaml }}"

- name: Find all compose files
  find:
    paths: "{{ playbook_dir }}/../services"
    patterns: "compose.yml"
    recurse: yes
  register: compose_files

- name: Extract volume mounts from compose files
  shell: |
    grep -E "^\s*-\s*/media/external/" "{{ item.path }}" | \
    sed 's/.*- //' | \
    cut -d':' -f1 | \
    sort -u
  register: volume_mounts
  loop: "{{ compose_files.files }}"
  failed_when: false

- name: Create all volume mount directories
  file:
    path: "{{ item.1 }}"
    state: directory
    owner: "{{ casa_config.username }}"
    group: "{{ casa_config.username }}"
    mode: "0755"
  loop: "{{ volume_mounts.results | subelements('stdout_lines', skip_missing=True) }}"
  when: item.1 != ""

- name: Start Docker Compose services
  shell: ./casa up
  args:
    chdir: "{{ playbook_dir }}/.."
  become_user: "{{ username }}"
  become: no
