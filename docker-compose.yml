version: "3"
networks:
  caddy:
    external: true
services:
  homeassistant:
    restart: unless-stopped
    container_name: homeassistant
    image: ghcr.io/home-assistant/home-assistant:stable
    environment:
      - TZ=Asia/Jerusalem
    volumes:
      - /media/external/homeassistant-config:/config
      - /etc/localtime:/etc/localtime:ro
      - /media/external/library:/library
    privileged: true
    network_mode: host

  downloader:
    restart: unless-stopped
    container_name: downloader
    build: ./downloader
    # image:
    #environment:
    volumes:
      - /media/external:/media/external
    privileged: true

  caddy:
    # image: caddy:stable
    build: ./caddy
    restart: unless-stopped
    container_name: caddy
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      # - ./site:/srv
      - /media/external/caddy_data/:/data/
      - /media/external/caddy_config/:/config/
    env_file:
      - ./caddy/.env
    networks:
      - caddy

  tailscale:
    restart: unless-stopped
    image: tailscale/tailscale
    privileged: true
    container_name: tailscale
    hostname: vpn.home.shubapp.com
    network_mode: host
    env_file: ./tailscale/.env
    environment:
      - TZ=Asia/Jerusalem
    volumes:
      - /var/lib:/var/lib
      - /dev/net/tun:/dev/net/tun

  watchtower:
    restart: unless-stopped
    image: containrrr/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: '--cleanup'